/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ferreteria_bda;

import Ferreteria_model.Productos;
import Ferreteria_model.VentaDetalle;
import Ferreteria_model.Ventas;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Dell
 */
public class DetalleVentaForm extends javax.swing.JFrame {

    DefaultTableModel modelo;
    int id = 0;

    /**
     * Creates new form DetalleVentaForm
     */
    public DetalleVentaForm() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(768, 486);
        setLocationRelativeTo(null);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbVenta = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTotal1 = new javax.swing.JTextField();
        cmbProducto = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalleVenta = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        btnEditar.setBackground(new java.awt.Color(255, 255, 51));
        btnEditar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar);
        btnEditar.setBounds(20, 20, 72, 25);

        btnEliminar.setBackground(new java.awt.Color(255, 33, 36));
        btnEliminar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(110, 20, 76, 25);

        btnSalir.setBackground(new java.awt.Color(51, 153, 255));
        btnSalir.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir);
        btnSalir.setBounds(210, 20, 72, 25);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel1.setText("Venta");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(25, 76, 56, 18);

        cmbVenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cmbVenta);
        cmbVenta.setBounds(80, 70, 172, 22);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel2.setText("Producto");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(11, 110, 60, 18);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel3.setText("Cantidad");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 150, 56, 18);

        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotal);
        txtTotal.setBounds(80, 190, 130, 22);

        btnGuardar.setBackground(new java.awt.Color(102, 255, 102));
        btnGuardar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar);
        btnGuardar.setBounds(240, 170, 80, 25);

        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        getContentPane().add(txtFiltro);
        txtFiltro.setBounds(20, 230, 321, 22);

        btnBuscar.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(370, 230, 72, 25);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel4.setText("Subtotal");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 190, 56, 18);

        txtTotal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotal1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotal1);
        txtTotal1.setBounds(80, 150, 130, 22);

        cmbProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cmbProducto);
        cmbProducto.setBounds(80, 110, 172, 22);

        tblDetalleVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Venta", "Producto", "Cantidad", "Subtotal"
            }
        ));
        jScrollPane1.setViewportView(tblDetalleVenta);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 280, 770, 210);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondo_detalle.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 770, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Obtener datos del formulario
        String ventaStr = (String) cmbVenta.getSelectedItem();           // ID de la venta (debe ser numérico como texto)
        String productoStr = (String) cmbProducto.getSelectedItem();     // Nombre del producto
        String cantidadStr = txtTotal1.getText();                        // Cantidad (txtTotal1)
        String subtotalStr = txtTotal.getText();                         // Subtotal

// Validar campos obligatorios
        if (ventaStr == null || productoStr == null
                || ventaStr.trim().isEmpty() || productoStr.trim().isEmpty()
                || cantidadStr.trim().isEmpty() || subtotalStr.trim().isEmpty()) {

            JOptionPane.showMessageDialog(this, "Por favor completa todos los campos obligatorios", "Campos vacíos", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int idVenta = Integer.parseInt(ventaStr);         // ID de venta
            int cantidad = Integer.parseInt(cantidadStr);     // Cantidad
            int subtotal = Integer.parseInt(subtotalStr);     // Subtotal

            int idProducto = obtenerIdProducto(productoStr.trim());  // Obtener ID del producto por nombre

            if (idProducto == -1) {
                JOptionPane.showMessageDialog(this, "Producto no válido o no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Guardar o editar el detalle de venta
            boolean resultado = (this.id == 0)
                    ? VentaDetalle.guardar(idVenta, idProducto, cantidad, subtotal)
                    : VentaDetalle.editar(this.id, idVenta, idProducto, cantidad, subtotal);

            if (resultado) {
                JOptionPane.showMessageDialog(this, "El detalle de venta se guardó correctamente", "Registro guardado", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al guardar el detalle de venta", "Error", JOptionPane.ERROR_MESSAGE);
            }

            cargarTable("");     // Refrescar la tabla
            limpiarCampos();     // Limpiar los campos del formulario

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Cantidad, subtotal o ID de venta deben ser números válidos", "Error de formato", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private int obtenerIdProducto(String productoNombre) {
        List<Productos> productos = Productos.obtener("");
        for (Productos producto : productos) {
            if (producto.getNombre().equals(productoNombre)) {
                return producto.getId_producto();
            }
        }
        return -1;
    }

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        cargarTable(txtFiltro.getText());
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        cargarTable(txtFiltro.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtTotal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotal1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTable("");  // Cargar productos
        tblDetalleVenta.removeColumn(tblDetalleVenta.getColumnModel().getColumn(0));
        llenarComboProductos();
       // llenarComboVentas();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetalleVentaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetalleVentaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetalleVentaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetalleVentaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetalleVentaForm().setVisible(true);
            }
        });
    }

    private void limpiarCampos() {
        // Restablecer selección de la venta
        cmbVenta.setSelectedIndex(0);  // Se restablece el ComboBox de ventas a su primer elemento (por ejemplo, "Item 1")

        // Limpiar los campos de subtotal y cantidad
        txtTotal.setText("");  // Limpiar el campo de total (o subtotal en este caso)
        txtTotal1.setText("");  // Limpiar el campo de subtotal adicional

        // Limpiar el filtro de búsqueda
        txtFiltro.setText("");

        // Restablecer el ComboBox de productos
        cmbProducto.setSelectedIndex(0);  // Restablecer la selección del ComboBox de productos

        // Restablecer el ID de la venta (si aplica)
        this.id = 0;  // Usualmente se resetearía para nuevas ventas
    }

   public void cargarTable(String filtro) {
    VentaDetalle detalleVenta = new VentaDetalle();  // Crear una instancia de VentaDetalle
    List<VentaDetalle> detalles = detalleVenta.obtener(filtro);  // Obtener los detalles de la venta

    System.out.println("Detalles obtenidos: " + detalles.size());  // Verificar cuántos detalles se obtienen

    DefaultTableModel modelo = (DefaultTableModel) tblDetalleVenta.getModel();  // Obtener el modelo de la tabla
    modelo.setRowCount(0);  // Limpiar la tabla

    // Iterar sobre los detalles de las ventas y agregar las filas a la tabla
    for (VentaDetalle detalle : detalles) {
        modelo.addRow(new Object[]{
            detalle.getId_detalle(),  // ID del detalle de venta
            detalle.getId_venta(),         // ID de la venta
            detalle.getProducto(),      // Nombre del producto
            detalle.getCantidad(),        // Cantidad de productos
            detalle.getSubtotal()         // Subtotal
        });
    }
}



    private void llenarComboProductos() {
        List<Productos> productos = Productos.obtener("");  // Obtener todos los productos
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (Productos producto : productos) {
            model.addElement(producto.getNombre());  // Solo el nombre, como en clientes
        }

        cmbProducto.setModel(model);  // Establece el modelo
    }

    /*private void llenarComboVentas() {
        // Obtener las ventas desde la base de datos o modelo correspondiente
        List<Ventas> ventas = Ventas.obtener("");  // Obtener las ventas (puedes agregar un filtro si lo necesitas)
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        // Iterar sobre la lista de ventas y agregar el id_venta al ComboBox
        for (Ventas venta : ventas) {
            model.addElement(String.valueOf(venta.getId_venta()));  // Agregar el id_venta al modelo
        }

        // Establecer el modelo en el ComboBox de ventas
        cmbVenta.setModel(model);
    }*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbProducto;
    private javax.swing.JComboBox<String> cmbVenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDetalleVenta;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotal1;
    // End of variables declaration//GEN-END:variables
}
